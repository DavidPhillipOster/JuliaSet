// ComputeRow.clx

kernel void ComputeRow(
  int jx,
  int numIterations,
  int width, 
  int height,
  global unsigned char *pixels,
  int rowBytes,
  float scale,
  float offsetX,
  float offsetY,
  float a,
  float b) {

  int j = jx;
  j = get_global_id(0);
  if (j < height) {
    global unsigned int *p = (global unsigned int *)(pixels + j*rowBytes);
    for (int i = 0; i < width; ++i) {
      float x = i*scale + offsetX;
      float y = j*scale + offsetY;
      int color = 0;
      int n = 0;
      // This for() loop is the actual Julia set equation.
      for (; n < numIterations && x*x + y*y < 4; ++n) {
        float newX = x*x - y*y + a;
        y = 2*x*y + b;
        x = newX;
      }
      color = n << 12;
      p[i] = color;
    }
  }
}
